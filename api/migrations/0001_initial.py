# Generated by Django 4.1.7 on 2023-07-23 12:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Photo', models.ImageField(null=True, upload_to='images/')),
                ('Date_Naiss', models.DateField(blank=True, null=True)),
                ('Adresse_perso', models.CharField(max_length=100, null=True)),
                ('Date_Recrut', models.DateField(null=True)),
                ('Poste_actuel', models.CharField(max_length=50, null=True)),
                ('Telephone', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commesion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('President', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom_dep', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FichierBourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Raison_recrut', models.CharField(max_length=300)),
                ('Specialite', models.CharField(max_length=40)),
                ('formation_comp', models.CharField(max_length=300)),
                ('Commentaire', models.CharField(max_length=300)),
                ('Reponse_DRH', models.BooleanField()),
                ('Reponse_commesion', models.BooleanField()),
                ('Etat_fichier', models.CharField(max_length=30)),
                ('Telephone', models.IntegerField()),
                ('Id_dep', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='api.departement')),
                ('id_Emp', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_comm', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='api.commesion')),
            ],
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom_struc', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ParcoursProf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Poste_occup', models.CharField(max_length=30)),
                ('Periode', models.DateField()),
                ('Travaux_realises', models.CharField(max_length=100)),
                ('id_Emp', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_fichier', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='api.fichierbourse')),
            ],
        ),
        migrations.AddField(
            model_name='departement',
            name='id_struc',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='api.structure'),
        ),
        migrations.AddField(
            model_name='employee',
            name='Id_dep',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.departement'),
        ),
        migrations.AddField(
            model_name='employee',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
